name: Backend CI / CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  workflow_dispatch: {}

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: backend
        run: |
          npm ci

      - name: Run tests
        working-directory: backend
        run: |
          npm run test || true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get AWS Account ID
        id: acct
        run: echo "ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_OUTPUT

      - name: Ensure ECR repo exists
        run: |
          ACCOUNT_ID=${{ steps.acct.outputs.ACCOUNT_ID }}
          aws ecr describe-repositories --repository-names ecommerce-ecr-backend || aws ecr create-repository --repository-name ecommerce-ecr-backend

      - name: Build Docker image
        run: |
          ACCOUNT_ID=${{ steps.acct.outputs.ACCOUNT_ID }}
          ECR_URI=${ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/ecommerce-ecr-backend
          docker build -t $ECR_URI:latest backend/

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.acct.outputs.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Push image to ECR
        run: |
          ACCOUNT_ID=${{ steps.acct.outputs.ACCOUNT_ID }}
          ECR_URI=${ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/ecommerce-ecr-backend
          docker tag $ECR_URI:latest $ECR_URI:latest
          docker push $ECR_URI:latest
