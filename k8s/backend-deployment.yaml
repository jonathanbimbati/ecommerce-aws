apiVersion: v1
kind: Service
metadata:
  name: ecommerce-backend
  labels:
    app: ecommerce-backend
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app: ecommerce-backend
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-backend
  labels:
    app: ecommerce-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ecommerce-backend
  template:
    metadata:
      labels:
        app: ecommerce-backend
    spec:
      serviceAccountName: ecommerce-backend-sa
      containers:
        - name: backend
          image: 199299155478.dkr.ecr.us-east-1.amazonaws.com/ecommerce-ecr-backend@sha256:102006a410303c09a76881c067140551bdac60afe8e07dc149ad06fda597806e
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: production
            - name: AWS_REGION
              value: us-east-1
            - name: DYNAMODB_TABLE
              value: "ecommerce-aws-Products"
            - name: AWS_WEB_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
            - name: AWS_ROLE_ARN
              value: arn:aws:iam::199299155478:role/eksctl-ecommerce-eks-addon-iamserviceaccount--Role1-Lp7MzZ9QjPHU
          readinessProbe:
            httpGet:
              path: /api/products
              port: 3000
            apiVersion: v1
            kind: Service
            metadata:
              name: backend
              labels:
                app: backend
              annotations:
                # Alias para compatibilidade de DNS internas (ex: http://backend) apontando para o API Gateway via ExternalName.
                # Ajuste o host abaixo para o endpoint real do API Gateway.
            spec:
              type: ExternalName
              externalName: w3rtebdo58.execute-api.us-east-1.amazonaws.com